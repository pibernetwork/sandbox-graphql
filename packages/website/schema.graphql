input FilterBetween {
  from: Float
  to: Float
}

type Mutation {
  addProfile(birthday: String!, userId: String!, weight: Float!): Profile
  delProfile(_id: String!): String!
  editProfile(_id: String!, birthday: String!, userId: String!, weight: Float!): Profile
}

type Profile {
  _id: String
  birthday: String
  user: User
  weight: Float
}

input ProfileConnectionFilter {
  weight: ProfileWeightFilter
}

input ProfileWeightFilter {
  between: FilterBetween
}

type Query {
  generated: String
  hello: String
  profile(_id: String!): Profile
  profiles: [Profile]!
  profilesConnection(filters: ProfileConnectionFilter, limit: Int!, page: Int!, sortBy: String!, sortOrder: String!): [Profile]!
  user(_id: String!): User!
  users: [User]
  usersOptions: [SelectOption!]!
}

type SelectOption {
  name: String!
  value: String!
}

type User {
  _id: String!
  birthday: String
  email: String
  profiles: [Profile]!
}
